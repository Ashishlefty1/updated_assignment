[{"C:\\CodeInspector\\Git\\front-end\\src\\index.js":"1","C:\\CodeInspector\\Git\\front-end\\src\\reportWebVitals.js":"2","C:\\CodeInspector\\Git\\front-end\\src\\App.js":"3","C:\\CodeInspector\\Git\\front-end\\src\\util\\useLocalStorage.js":"4","C:\\CodeInspector\\Git\\front-end\\src\\CodeReviewAssignmentView\\CodeReviewAssignmentView.js":"5","C:\\CodeInspector\\Git\\front-end\\src\\Homepage\\index.js":"6","C:\\CodeInspector\\Git\\front-end\\src\\PrivateRoute\\index.js":"7","C:\\CodeInspector\\Git\\front-end\\src\\Dashboard\\index.js":"8","C:\\CodeInspector\\Git\\front-end\\src\\AssignmentView\\index.js":"9","C:\\CodeInspector\\Git\\front-end\\src\\Login\\index.js":"10","C:\\CodeInspector\\Git\\front-end\\src\\CodeReviewerDashboard\\index.js":"11","C:\\CodeInspector\\Git\\front-end\\src\\Services\\fetchService.js":"12","C:\\CodeInspector\\Git\\front-end\\src\\StatusBadge\\index.js":"13","C:\\CodeInspector\\Git\\front-end\\src\\UserProvider\\index.js":"14"},{"size":720,"mtime":1692968579492,"results":"15","hashOfConfig":"16"},{"size":362,"mtime":1692369103604,"results":"17","hashOfConfig":"16"},{"size":2051,"mtime":1692968760662,"results":"18","hashOfConfig":"16"},{"size":458,"mtime":1692385435791,"results":"19","hashOfConfig":"16"},{"size":5898,"mtime":1692958914208,"results":"20","hashOfConfig":"16"},{"size":202,"mtime":1692390052406,"results":"21","hashOfConfig":"16"},{"size":921,"mtime":1692967012682,"results":"22","hashOfConfig":"16"},{"size":2725,"mtime":1692969270058,"results":"23","hashOfConfig":"16"},{"size":6919,"mtime":1692958914207,"results":"24","hashOfConfig":"16"},{"size":3175,"mtime":1692969264032,"results":"25","hashOfConfig":"16"},{"size":7639,"mtime":1692969247730,"results":"26","hashOfConfig":"16"},{"size":539,"mtime":1692476526048,"results":"27","hashOfConfig":"16"},{"size":597,"mtime":1692958914213,"results":"28","hashOfConfig":"16"},{"size":605,"mtime":1692967701435,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"bmq16k",{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"64"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\CodeInspector\\Git\\front-end\\src\\index.js",[],[],"C:\\CodeInspector\\Git\\front-end\\src\\reportWebVitals.js",[],[],"C:\\CodeInspector\\Git\\front-end\\src\\App.js",["74"],[],"C:\\CodeInspector\\Git\\front-end\\src\\util\\useLocalStorage.js",[],[],"C:\\CodeInspector\\Git\\front-end\\src\\CodeReviewAssignmentView\\CodeReviewAssignmentView.js",["75","76","77","78","79","80","81","82"],[],"C:\\CodeInspector\\Git\\front-end\\src\\Homepage\\index.js",[],[],"C:\\CodeInspector\\Git\\front-end\\src\\PrivateRoute\\index.js",["83","84"],[],"C:\\CodeInspector\\Git\\front-end\\src\\Dashboard\\index.js",["85"],[],"C:\\CodeInspector\\Git\\front-end\\src\\AssignmentView\\index.js",["86","87","88","89","90"],[],"C:\\CodeInspector\\Git\\front-end\\src\\Login\\index.js",["91"],[],"C:\\CodeInspector\\Git\\front-end\\src\\CodeReviewerDashboard\\index.js",["92","93"],[],"import React, { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport ajax from \"../Services/fetchService\";\r\nimport {  Button, Card, Col, Container, Row } from \"react-bootstrap\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport StatusBadge from \"../StatusBadge\";\r\nimport {  useUser } from \"../UserProvider\";\r\n\r\nconst CodeReviewerDashboard = () => {\r\n  const navigate = useNavigate();\r\n  const user = useUser();\r\n  const [assignments, setAssignments] = useState(null);\r\n\r\n  useEffect(()=>{\r\n    if(!user.jwt)navigate(\"/login\");\r\n  })\r\n\r\n  function editReview(assignment){\r\n    window.location.href=`/assignments/${assignment.id}`\r\n  }\r\n\r\n  function claimAssignment(assignment) {\r\n    const decodedJWT = jwt_decode(user.jwt);\r\n    const user = {\r\n      username: decodedJWT.sub,\r\n    };\r\n\r\n    assignment.codeReviewer = user;\r\n    //  todo : dont hardcode this status\r\n    assignment.status = \"In Review\";\r\n\r\n    ajax(`/api/assignments/${assignment.id}`, \"PUT\", user.jwt, assignment).then(\r\n      (updatedAssignment) => {\r\n        const assignmentsCopy = [...assignments];\r\n        const i = assignmentsCopy.findIndex((a) => a.id === assignment.id);\r\n        assignmentsCopy[i] = updatedAssignment;\r\n        setAssignments(assignmentsCopy);\r\n      }\r\n    );\r\n  }\r\n\r\n  useEffect(() => {\r\n    ajax(\"api/assignments\", \"GET\", user.jwt).then((assignmentsData) => {\r\n      setAssignments(assignmentsData);\r\n    });\r\n  }, [user.jwt]);\r\n\r\n  function createAssignment() {\r\n    ajax(\"api/assignments\", \"POST\", user.jwt).then((assignment) => {\r\n     // navigate(`/assignments/${assignment.id}`);\r\n       window.location.href = `/assignments/${assignment.id}`;\r\n    });\r\n  }\r\n  return (\r\n    <Container>\r\n      <Row>\r\n        <Col>\r\n          <div\r\n            className=\"d-flex justify-content-end\"\r\n            style={{ cursor: \"pointer\" }}\r\n            onClick={() => {\r\n              user.setJwt(null);\r\n              navigate(\"/login\");\r\n            }}\r\n          >\r\n            Logout\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <h1>Code Reviewer Dashboard</h1>\r\n        </Col>\r\n      </Row>\r\n      <div className=\"assignment-wrapper  in-review\">\r\n        <div className=\"h3 px-2 assignment-wrapper-title\">In Review</div>\r\n        {assignments &&\r\n        assignments.filter((assignment) => assignment.status === \"In Review\")\r\n          .length > 0 ? (\r\n          <div\r\n            className=\"d-grid gap-5\"\r\n            style={{ gridTemplateColumns: \"repeat(auto-fill,18rem)\" }}\r\n          >\r\n            {assignments\r\n              .filter((assignment) => assignment.status === \"In Review\" || assignment.status === \"Resubmitted\")\r\n              .map((assignment) => (\r\n                <Card\r\n                  key={assignment.id}\r\n                  style={{ width: \"18rem\", height: \"18rem\" }}\r\n                >\r\n                  <Card.Body className=\"d-flex flex-column justify-content-around\">\r\n                    <Card.Title>Assignment #{assignment.number}</Card.Title>\r\n                    <div className=\"d-flex alignitems-start\">\r\n                    <StatusBadge text={assignment.status}/>\r\n                    </div>\r\n\r\n                    <Card.Text style={{ marginTop: \"1em\" }}>\r\n                      <b>Github URL:</b> {assignment.githuburl}\r\n                      <br />\r\n                      <b>Branch:</b> {assignment.branch}\r\n                    </Card.Text>\r\n\r\n                    <Button\r\n                      variant=\"secondary\"\r\n                      onClick={() => {\r\n                        editReview(assignment);\r\n                      }}\r\n                    >\r\n                      Edit\r\n                    </Button>\r\n                  </Card.Body>\r\n                </Card>\r\n              ))}\r\n          </div>\r\n        ) : (\r\n          <div>No assignments found</div>\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"assignment-wrapper  submitted\">\r\n        <div className=\"h3 px-2 assignment-wrapper-title\">Awaiting Review</div>\r\n        {assignments &&\r\n        assignments.filter((assignment) => assignment.status === \"Submitted\" || assignment.status === \"Resubmitted\")\r\n          .length > 0 ? (\r\n          <div\r\n            className=\"d-grid gap-5\"\r\n            style={{ gridTemplateColumns: \"repeat(auto-fill,18rem)\" }}\r\n          >\r\n            {assignments\r\n              .filter((assignment) => assignment.status === \"Submitted\" || assignment.status === \"Resubmitted\")\r\n              .sort((a,b)=> {\r\n                if(a.status === \"Resubmitted\") return -1;\r\n                else return 1;\r\n              })\r\n              .map((assignment) => (\r\n                <Card\r\n                  key={assignment.id}\r\n                  style={{ width: \"18rem\", height: \"18rem\" }}\r\n                >\r\n                  <Card.Body className=\"d-flex flex-column justify-content-around\">\r\n                    <Card.Title>Assignment #{assignment.number}</Card.Title>\r\n                    <div className=\"d-flex alignitems-start\">\r\n                    <StatusBadge text={assignment.status}/>\r\n                    </div>\r\n\r\n                    <Card.Text style={{ marginTop: \"1em\" }}>\r\n                      <b>Github URL:</b> {assignment.githuburl}\r\n                      <br />\r\n                      <b>Branch:</b> {assignment.branch}\r\n                    </Card.Text>\r\n\r\n                    <Button\r\n                      variant=\"secondary\"\r\n                      onClick={() => {\r\n                        claimAssignment(assignment);\r\n                      }}\r\n                    >\r\n                      Claim\r\n                    </Button>\r\n                  </Card.Body>\r\n                </Card>\r\n              ))}\r\n          </div>\r\n        ) : (\r\n          <div>No assignments found</div>\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"assignment-wrapper  needs-update\">\r\n        <div className=\"h3 px-2 assignment-wrapper-title\">Needs Update</div>\r\n        {assignments &&\r\n        assignments.filter((assignment) => assignment.status === \"Needs Update\")\r\n          .length > 0 ? (\r\n          <div\r\n            className=\"d-grid gap-5\"\r\n            style={{ gridTemplateColumns: \"repeat(auto-fill,18rem)\" }}\r\n          >\r\n            {assignments\r\n              .filter((assignment) => assignment.status === \"Needs Update\")\r\n              .map((assignment) => (\r\n                <Card\r\n                  key={assignment.id}\r\n                  style={{ width: \"18rem\", height: \"18rem\" }}\r\n                >\r\n                  <Card.Body className=\"d-flex flex-column justify-content-around\">\r\n                    <Card.Title>Assignment #{assignment.number}</Card.Title>\r\n                    <div className=\"d-flex alignitems-start\">\r\n                    <StatusBadge text={assignment.status}/>\r\n                    </div>\r\n\r\n                    <Card.Text style={{ marginTop: \"1em\" }}>\r\n                      <b>Github URL:</b> {assignment.githuburl}\r\n                      <br />\r\n                      <b>Branch:</b> {assignment.branch}\r\n                    </Card.Text>\r\n\r\n                    <Button\r\n                      variant=\"secondary\"\r\n                      onClick={() => {\r\n                        window.location.href=`/assignments/${assignment.id}`;\r\n                      }}\r\n                    >\r\n                      View\r\n                    </Button>\r\n                  </Card.Body>\r\n                </Card>\r\n              ))}\r\n          </div>\r\n        ) : (\r\n          <div>No assignments found</div>\r\n        )}\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default CodeReviewerDashboard;\r\n",[],"C:\\CodeInspector\\Git\\front-end\\src\\Services\\fetchService.js",["94"],[],"C:\\CodeInspector\\Git\\front-end\\src\\StatusBadge\\index.js",[],[],"C:\\CodeInspector\\Git\\front-end\\src\\UserProvider\\index.js",[],[],{"ruleId":"95","severity":1,"message":"96","line":24,"column":5,"nodeType":"97","endLine":24,"endColumn":15,"suggestions":"98"},{"ruleId":"99","severity":1,"message":"100","line":6,"column":3,"nodeType":"101","messageId":"102","endLine":6,"endColumn":8},{"ruleId":"99","severity":1,"message":"103","line":8,"column":3,"nodeType":"101","messageId":"102","endLine":8,"endColumn":14},{"ruleId":"99","severity":1,"message":"104","line":11,"column":3,"nodeType":"101","messageId":"102","endLine":11,"endColumn":11},{"ruleId":"99","severity":1,"message":"105","line":12,"column":3,"nodeType":"101","messageId":"102","endLine":12,"endColumn":17},{"ruleId":"99","severity":1,"message":"106","line":28,"column":15,"nodeType":"101","messageId":"102","endLine":28,"endColumn":21},{"ruleId":"99","severity":1,"message":"107","line":29,"column":10,"nodeType":"101","messageId":"102","endLine":29,"endColumn":25},{"ruleId":"95","severity":1,"message":"108","line":62,"column":6,"nodeType":"97","endLine":62,"endColumn":18,"suggestions":"109"},{"ruleId":"95","severity":1,"message":"110","line":85,"column":6,"nodeType":"97","endLine":85,"endColumn":8,"suggestions":"111"},{"ruleId":"99","severity":1,"message":"112","line":1,"column":17,"nodeType":"101","messageId":"102","endLine":1,"endColumn":27},{"ruleId":"99","severity":1,"message":"113","line":2,"column":10,"nodeType":"101","messageId":"102","endLine":2,"endColumn":23},{"ruleId":"95","severity":1,"message":"114","line":19,"column":6,"nodeType":"97","endLine":19,"endColumn":16,"suggestions":"115"},{"ruleId":"99","severity":1,"message":"100","line":6,"column":3,"nodeType":"101","messageId":"102","endLine":6,"endColumn":8},{"ruleId":"99","severity":1,"message":"106","line":28,"column":15,"nodeType":"101","messageId":"102","endLine":28,"endColumn":21},{"ruleId":"99","severity":1,"message":"116","line":30,"column":10,"nodeType":"101","messageId":"102","endLine":30,"endColumn":28},{"ruleId":"95","severity":1,"message":"108","line":62,"column":6,"nodeType":"97","endLine":62,"endColumn":18,"suggestions":"117"},{"ruleId":"95","severity":1,"message":"110","line":85,"column":6,"nodeType":"97","endLine":85,"endColumn":8,"suggestions":"118"},{"ruleId":"95","severity":1,"message":"114","line":15,"column":6,"nodeType":"97","endLine":15,"endColumn":12,"suggestions":"119"},{"ruleId":"120","severity":1,"message":"121","line":23,"column":35,"nodeType":"101","messageId":"122","endLine":23,"endColumn":39},{"ruleId":"99","severity":1,"message":"123","line":48,"column":12,"nodeType":"101","messageId":"102","endLine":48,"endColumn":28},{"ruleId":"99","severity":1,"message":"113","line":1,"column":10,"nodeType":"101","messageId":"102","endLine":1,"endColumn":23},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getRolesFromJWT'. Either include it or remove the dependency array.","ArrayExpression",["124"],"no-unused-vars","'Badge' is defined but never used.","Identifier","unusedVar","'ButtonGroup' is defined but never used.","'Dropdown' is defined but never used.","'DropdownButton' is defined but never used.","'setJwt' is assigned a value but never used.","'assignmentEnums' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'persist'. Either include it or remove the dependency array.",["125"],"React Hook useEffect has missing dependencies: 'id' and 'jwt'. Either include them or remove the dependency array.",["126"],"'useContext' is defined but never used.","'useLocalState' is defined but never used.","React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.",["127"],"'assignmentStatuses' is assigned a value but never used.",["128"],["129"],["130"],"no-use-before-define","'user' was used before it was defined.","usedBeforeDefined","'createAssignment' is defined but never used.",{"desc":"131","fix":"132"},{"desc":"133","fix":"134"},{"desc":"135","fix":"136"},{"desc":"137","fix":"138"},{"desc":"133","fix":"139"},{"desc":"135","fix":"140"},{"desc":"141","fix":"142"},"Update the dependencies array to be: [getRolesFromJWT, user.jwt]",{"range":"143","text":"144"},"Update the dependencies array to be: [assignment, persist]",{"range":"145","text":"146"},"Update the dependencies array to be: [id, jwt]",{"range":"147","text":"148"},"Update the dependencies array to be: [navigate, user.jwt]",{"range":"149","text":"150"},{"range":"151","text":"146"},{"range":"152","text":"148"},"Update the dependencies array to be: [navigate, user]",{"range":"153","text":"154"},[873,883],"[getRolesFromJWT, user.jwt]",[1645,1657],"[assignment, persist]",[2580,2582],"[id, jwt]",[635,645],"[navigate, user.jwt]",[1633,1645],[2568,2570],[507,513],"[navigate, user]"]