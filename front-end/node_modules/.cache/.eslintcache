[{"C:\\CodeInspector\\Git\\front-end\\src\\index.js":"1","C:\\CodeInspector\\Git\\front-end\\src\\reportWebVitals.js":"2","C:\\CodeInspector\\Git\\front-end\\src\\App.js":"3","C:\\CodeInspector\\Git\\front-end\\src\\util\\useLocalStorage.js":"4","C:\\CodeInspector\\Git\\front-end\\src\\Dashboard\\index.js":"5","C:\\CodeInspector\\Git\\front-end\\src\\PrivateRoute\\index.js":"6","C:\\CodeInspector\\Git\\front-end\\src\\Login\\index.js":"7","C:\\CodeInspector\\Git\\front-end\\src\\Homepage\\index.js":"8","C:\\CodeInspector\\Git\\front-end\\src\\AssignmentView\\index.js":"9","C:\\CodeInspector\\Git\\front-end\\src\\Services\\fetchService.js":"10","C:\\CodeInspector\\Git\\front-end\\src\\CodeReviewerDashboard\\index.js":"11"},{"size":628,"mtime":1692389549396,"results":"12","hashOfConfig":"13"},{"size":362,"mtime":1692369103604,"results":"14","hashOfConfig":"13"},{"size":1528,"mtime":1692726968266,"results":"15","hashOfConfig":"13"},{"size":458,"mtime":1692385435791,"results":"16","hashOfConfig":"13"},{"size":2757,"mtime":1692722469867,"results":"17","hashOfConfig":"13"},{"size":825,"mtime":1692562125555,"results":"18","hashOfConfig":"13"},{"size":3270,"mtime":1692482098448,"results":"19","hashOfConfig":"13"},{"size":202,"mtime":1692390052406,"results":"20","hashOfConfig":"13"},{"size":5450,"mtime":1692701085175,"results":"21","hashOfConfig":"13"},{"size":539,"mtime":1692476526048,"results":"22","hashOfConfig":"13"},{"size":7425,"mtime":1692881900592,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},"bmq16k",{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"27"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"27"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"27"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"27"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\CodeInspector\\Git\\front-end\\src\\index.js",[],[],[],"C:\\CodeInspector\\Git\\front-end\\src\\reportWebVitals.js",[],[],"C:\\CodeInspector\\Git\\front-end\\src\\App.js",["62","63","64"],[],"C:\\CodeInspector\\Git\\front-end\\src\\util\\useLocalStorage.js",[],[],"C:\\CodeInspector\\Git\\front-end\\src\\Dashboard\\index.js",[],[],"C:\\CodeInspector\\Git\\front-end\\src\\PrivateRoute\\index.js",["65"],[],"import React, { useState } from 'react';\r\nimport { useLocalState } from '../util/useLocalStorage';\r\nimport { Navigate } from 'react-router-dom';\r\nimport ajax from '../Services/fetchService';\r\n\r\nconst PrivateRoute = ({children}) => {\r\n\r\n    const [jwt,setJwt] = useLocalState(\"\", \"jwt\")\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [isValid,setIsValid] = useState(null);\r\n\r\n    if(jwt){\r\n        ajax(`/api/auth/validate?token=${jwt}`,\"GET\",jwt)\r\n        .then((isValid) =>{\r\n           setIsValid(isValid);\r\n           setIsLoading(false);\r\n            \r\n        }); \r\n        \r\n    }else{\r\n       return  <Navigate to=\"/login\"/>\r\n    }\r\n\r\n    return isLoading ? ( <div>Loading...</div>) : \r\n    isValid === true ? ( children ) :\r\n    (<Navigate to=\"/login\"/>);\r\n     \r\n};\r\n\r\nexport default PrivateRoute;","C:\\CodeInspector\\Git\\front-end\\src\\Login\\index.js",["66","67","68"],[],"import React, { useState } from \"react\";\r\nimport { useLocalState } from \"../util/useLocalStorage\";\r\nimport ajax from \"../Services/fetchService\";\r\nimport { Button, Col, Container, Row } from \"react-bootstrap\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport { Navigate, useNavigate } from \"react-router-dom\";\r\n\r\n\r\nconst Login = () => {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const navigate = useNavigate();\r\n\r\n  const [jwt, setJwt] = useLocalState(\"\", \"jwt\");\r\n\r\n  function sendLoginRequest() {\r\n    const reqBody = {\r\n      username: username,\r\n      password: password,\r\n    };\r\n\r\n    fetch(\"api/auth/login\", {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      method: \"POST\",\r\n      body: JSON.stringify(reqBody), // Sending the request body as JSON\r\n    })\r\n      .then((response) => {\r\n        if (response.status === 200)\r\n          return Promise.all([response.json(), response.headers]);\r\n        else return Promise.reject(\"Invalid login attempt\");\r\n      })\r\n\r\n      .then(([body, headers]) => {\r\n        setJwt(headers.get(\"authorization\"));\r\n        window.location.href = \"dashboard\"; // Getting the \"authorization\" header value\r\n      })\r\n      .catch((message) => {\r\n        alert(message);\r\n      });\r\n  }\r\n  // The empty array means this effect runs only once when the component mounts\r\n\r\n  return (\r\n    <>\r\n      <Container>\r\n      <Row className=\"justify-content-center mt-5\">\r\n          <Col md=\"8\" lg=\"6\">\r\n            <Form.Group className=\"mb-3\" controlId=\"username\">\r\n              <Form.Label className=\"fs-4\">Username</Form.Label>\r\n              <Form.Control\r\n                type=\"email\"\r\n                size=\"lg\"\r\n                placeholder=\"joe@gmail.com\"\r\n                value={username}\r\n                onChange={(e) => setUsername(e.target.value)}\r\n              />\r\n            </Form.Group>\r\n          </Col>\r\n        </Row>\r\n       \r\n        <Row className=\"justify-content-center\">\r\n          <Col md=\"8\" lg=\"6\">\r\n            <Form.Group className=\"mb-3\" controlId=\"password\">\r\n              <Form.Label className=\"fs-4\">Password</Form.Label>\r\n              <Form.Control\r\n                type=\"password\"\r\n                size=\"lg\"\r\n                placeholder=\"Type in your password\"\r\n                value={password}\r\n                onChange={(e) => setPassword(e.target.value)}\r\n              />\r\n            </Form.Group>\r\n          </Col>\r\n        </Row>\r\n\r\n        <Row className=\"justify-content-center\">\r\n          <Col\r\n            md=\"8\"\r\n            lg=\"6\"\r\n            className=\"mt-2 d-flex flex-column gap-5 flex-md-row justify-content-md-between\"\r\n          >\r\n            <Button\r\n              id=\"submit\"\r\n              type=\"button\"\r\n              size=\"lg\"\r\n              onClick={() => sendLoginRequest()}\r\n            >\r\n              Login\r\n            </Button>\r\n            <Button\r\n              variant=\"secondary\"\r\n              type=\"button\"\r\n              size=\"lg\"\r\n              onClick={() => {\r\n                navigate(\"/\");\r\n              }}\r\n            >\r\n              Exit\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n","C:\\CodeInspector\\Git\\front-end\\src\\Homepage\\index.js",[],[],"C:\\CodeInspector\\Git\\front-end\\src\\AssignmentView\\index.js",["69","70","71"],[],"import React, { useEffect, useRef, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useLocalState } from \"../util/useLocalStorage\";\r\nimport ajax from \"../Services/fetchService\";\r\nimport {\r\n  Badge,\r\n  Button,\r\n  ButtonGroup,\r\n  Col,\r\n  Container,\r\n  Dropdown,\r\n  DropdownButton,\r\n  Form,\r\n  Row,\r\n} from \"react-bootstrap\";\r\n\r\nconst AssignmentView = () => {\r\n  const { id } = useParams();\r\n  const [assignment, setAssignment] = useState({\r\n    branch: \"\",\r\n    githuburl: \"\",\r\n    number: null,\r\n    status: null,\r\n  });\r\n  const [jwt, setJwt] = useLocalState(\"\", \"jwt\");\r\n  const [assignmentEnums, setAssignmentEnums] = useState([]);\r\n  const [assignmentStatuses, setAssignmentStatuses] = useState([]);\r\n\r\n  const prevAssignmentValue = useRef(assignment);\r\n\r\n  function updateAssignment(prop, value) {\r\n    const newAssignment = { ...assignment };\r\n    newAssignment[prop] = value;\r\n    setAssignment(newAssignment);\r\n    //  console.log(assignment)\r\n  }\r\n\r\n  function save() {\r\n    if (assignment.status === assignmentStatuses[0].status) {\r\n      updateAssignment(\"status\", assignmentStatuses[1].status);\r\n    } else {\r\n      persist();\r\n    }\r\n  }\r\n\r\n  function persist() {\r\n    ajax(`/api/assignments/${id}`, \"PUT\", jwt, assignment).then(\r\n      (assignmentData) => {\r\n        setAssignment(assignmentData);\r\n      }\r\n    );\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (prevAssignmentValue.current.status !== assignment.status) {\r\n      persist();\r\n    }\r\n    prevAssignmentValue.current = assignment;\r\n  }, [assignment]);\r\n  // function save() {\r\n  //   const updatedStatus = assignmentStatuses[1].status;\r\n  //   const updatedAssignment = assignment.status === assignmentStatuses[0].status\r\n  //     ? { ...assignment, status: updatedStatus }\r\n  //     : assignment;\r\n\r\n  //   ajax(`/api/assignments/${id}`, \"PUT\", jwt, updatedAssignment).then(\r\n  //     (assignmentData) => {\r\n  //       setAssignment(assignmentData);\r\n  //     }\r\n  //   );\r\n  // }\r\n\r\n  useEffect(() => {\r\n    ajax(`/api/assignments/${id}`, \"GET\", jwt).then((assignmentsResponse) => {\r\n      let assignmentData = assignmentsResponse.assignment;\r\n      if (assignmentData.branch === null) assignmentData.branch = \"\";\r\n      if (assignmentData.githuburl === null) assignmentData.githuburl = \"\";\r\n      setAssignment(assignmentData);\r\n      setAssignmentEnums(assignmentsResponse.assignmentEnum);\r\n      setAssignmentStatuses(assignmentsResponse.statusEnums);\r\n    });\r\n  }, []);\r\n\r\n  // useEffect(() => console.log(assignmentEnums), [assignmentEnums]);\r\n\r\n  return (\r\n    <Container className=\"mt-5\">\r\n      <Row className=\"d-flex align-items-center\">\r\n        <Col>\r\n          {assignment.number ? <h1>Assignment {assignment.number}</h1> : <></>}\r\n        </Col>\r\n        <Col>\r\n          <Badge pill bg=\"info\" style={{ fontSize: \"1em\" }}>\r\n            {assignment.status}\r\n          </Badge>\r\n        </Col>\r\n      </Row>\r\n\r\n      {assignment ? (\r\n        <>\r\n          <Form.Group as={Row} className=\"my-3\" controlId=\"assignmentName\">\r\n            <Form.Label column sm=\"3\" md=\"2\">\r\n              Assignment Number:\r\n            </Form.Label>\r\n            <Col sm=\"9\" md=\"8\" lg=\"6\">\r\n              <DropdownButton\r\n                as={ButtonGroup}\r\n                variant={\"info\"}\r\n                title={\r\n                  assignment.number\r\n                    ? `Assignment ${assignment.number}`\r\n                    : \"Select an Assignment\"\r\n                }\r\n                onSelect={(selectedElement) => {\r\n                  updateAssignment(\"number\", selectedElement);\r\n                }}\r\n              >\r\n                {assignmentEnums.map((assignmentEnum) => (\r\n                  <Dropdown.Item\r\n                    key={assignmentEnum.assignmentNum}\r\n                    eventKey={assignmentEnum.assignmentNum}\r\n                  >\r\n                    {assignmentEnum.assignmentNum}\r\n                  </Dropdown.Item>\r\n                ))}\r\n              </DropdownButton>\r\n            </Col>\r\n          </Form.Group>\r\n\r\n          <Form.Group as={Row} className=\"my-3\" controlId=\"githuburl\">\r\n            <Form.Label column sm=\"3\" md=\"2\">\r\n              Github URL:\r\n            </Form.Label>\r\n            <Col sm=\"9\" md=\"8\" lg=\"6\">\r\n              <Form.Control\r\n                onChange={(e) => updateAssignment(\"githuburl\", e.target.value)}\r\n                type=\"url\"\r\n                placeholder=\"http://github.com/username/repo-name\"\r\n                value={assignment.githuburl}\r\n              />\r\n            </Col>\r\n          </Form.Group>\r\n\r\n          <Form.Group as={Row} className=\"mb-3\" controlId=\"branch\">\r\n            <Form.Label column sm=\"3\" md=\"2\">\r\n              Branch :\r\n            </Form.Label>\r\n            <Col sm=\"9\" md=\"8\" lg=\"6\">\r\n              <Form.Control\r\n                onChange={(e) => updateAssignment(\"branch\", e.target.value)}\r\n                type=\"text\"\r\n                placeholder=\"example_branch_name\"\r\n                value={assignment.branch}\r\n              />\r\n            </Col>\r\n          </Form.Group>\r\n          <div className=\"d-flex gap-5\">\r\n          <Button onClick={() => save()}>Submit Assignment</Button>\r\n          <Button \r\n          variant=\"secondary\"\r\n          onClick={() => window.location.href =\"/dashboard\"}>Back</Button>\r\n          </div>\r\n          \r\n        </>\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default AssignmentView;\r\n","C:\\CodeInspector\\Git\\front-end\\src\\Services\\fetchService.js",["72"],[],"import { useLocalState } from \"../util/useLocalStorage\";\r\n\r\nfunction ajax(url, requestMethod, jwt, requestBody) {\r\n  const fetchData = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    method: requestMethod,\r\n  };\r\n  if (jwt) {\r\n    fetchData.headers.Authorization = `Bearer ${jwt}`;\r\n  }\r\n  if (requestBody) {\r\n    fetchData.body = JSON.stringify(requestBody);\r\n  }\r\n\r\n  return fetch(url, fetchData).then((response) => {\r\n    if (response.status === 200) return response.json();\r\n  });\r\n}\r\n\r\nexport default ajax;\r\n","C:\\CodeInspector\\Git\\front-end\\src\\CodeReviewerDashboard\\index.js",["73"],[],{"ruleId":"74","severity":1,"message":"75","line":1,"column":10,"nodeType":"76","messageId":"77","endLine":1,"endColumn":19},{"ruleId":"74","severity":1,"message":"78","line":16,"column":15,"nodeType":"76","messageId":"77","endLine":16,"endColumn":21},{"ruleId":"74","severity":1,"message":"79","line":17,"column":17,"nodeType":"76","messageId":"77","endLine":17,"endColumn":25},{"ruleId":"74","severity":1,"message":"78","line":8,"column":16,"nodeType":"76","messageId":"77","endLine":8,"endColumn":22},{"ruleId":"74","severity":1,"message":"80","line":3,"column":8,"nodeType":"76","messageId":"77","endLine":3,"endColumn":12},{"ruleId":"74","severity":1,"message":"81","line":6,"column":10,"nodeType":"76","messageId":"77","endLine":6,"endColumn":18},{"ruleId":"74","severity":1,"message":"82","line":14,"column":10,"nodeType":"76","messageId":"77","endLine":14,"endColumn":13},{"ruleId":"74","severity":1,"message":"78","line":25,"column":15,"nodeType":"76","messageId":"77","endLine":25,"endColumn":21},{"ruleId":"83","severity":1,"message":"84","line":59,"column":6,"nodeType":"85","endLine":59,"endColumn":18,"suggestions":"86"},{"ruleId":"83","severity":1,"message":"87","line":82,"column":6,"nodeType":"85","endLine":82,"endColumn":8,"suggestions":"88"},{"ruleId":"74","severity":1,"message":"89","line":1,"column":10,"nodeType":"76","messageId":"77","endLine":1,"endColumn":23},{"ruleId":"74","severity":1,"message":"90","line":39,"column":12,"nodeType":"76","messageId":"77","endLine":39,"endColumn":28},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'setJwt' is assigned a value but never used.","'setRoles' is assigned a value but never used.","'ajax' is defined but never used.","'Navigate' is defined but never used.","'jwt' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'persist'. Either include it or remove the dependency array.","ArrayExpression",["91"],"React Hook useEffect has missing dependencies: 'id' and 'jwt'. Either include them or remove the dependency array.",["92"],"'useLocalState' is defined but never used.","'createAssignment' is defined but never used.",{"desc":"93","fix":"94"},{"desc":"95","fix":"96"},"Update the dependencies array to be: [assignment, persist]",{"range":"97","text":"98"},"Update the dependencies array to be: [id, jwt]",{"range":"99","text":"100"},[1536,1548],"[assignment, persist]",[2471,2473],"[id, jwt]"]