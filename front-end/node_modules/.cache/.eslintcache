[{"C:\\CodeInspector\\Git\\front-end\\src\\index.js":"1","C:\\CodeInspector\\Git\\front-end\\src\\reportWebVitals.js":"2","C:\\CodeInspector\\Git\\front-end\\src\\App.js":"3","C:\\CodeInspector\\Git\\front-end\\src\\util\\useLocalStorage.js":"4","C:\\CodeInspector\\Git\\front-end\\src\\CodeReviewAssignmentView\\CodeReviewAssignmentView.js":"5","C:\\CodeInspector\\Git\\front-end\\src\\Homepage\\index.js":"6","C:\\CodeInspector\\Git\\front-end\\src\\PrivateRoute\\index.js":"7","C:\\CodeInspector\\Git\\front-end\\src\\Dashboard\\index.js":"8","C:\\CodeInspector\\Git\\front-end\\src\\AssignmentView\\index.js":"9","C:\\CodeInspector\\Git\\front-end\\src\\Login\\index.js":"10","C:\\CodeInspector\\Git\\front-end\\src\\CodeReviewerDashboard\\index.js":"11","C:\\CodeInspector\\Git\\front-end\\src\\Services\\fetchService.js":"12","C:\\CodeInspector\\Git\\front-end\\src\\StatusBadge\\index.js":"13","C:\\CodeInspector\\Git\\front-end\\src\\UserProvider\\index.js":"14","C:\\CodeInspector\\Git\\front-end\\src\\Comment\\index.js":"15"},{"size":720,"mtime":1692968579492,"results":"16","hashOfConfig":"17"},{"size":362,"mtime":1692369103604,"results":"18","hashOfConfig":"17"},{"size":2061,"mtime":1692984872562,"results":"19","hashOfConfig":"17"},{"size":458,"mtime":1692385435791,"results":"20","hashOfConfig":"17"},{"size":5898,"mtime":1692958914208,"results":"21","hashOfConfig":"17"},{"size":202,"mtime":1692390052406,"results":"22","hashOfConfig":"17"},{"size":921,"mtime":1692967012682,"results":"23","hashOfConfig":"17"},{"size":2725,"mtime":1692969270058,"results":"24","hashOfConfig":"17"},{"size":9663,"mtime":1693002957385,"results":"25","hashOfConfig":"17"},{"size":3175,"mtime":1692969264032,"results":"26","hashOfConfig":"17"},{"size":7639,"mtime":1692969247730,"results":"27","hashOfConfig":"17"},{"size":539,"mtime":1692476526048,"results":"28","hashOfConfig":"17"},{"size":597,"mtime":1692958914213,"results":"29","hashOfConfig":"17"},{"size":605,"mtime":1692967701435,"results":"30","hashOfConfig":"17"},{"size":1126,"mtime":1693003741611,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"bmq16k",{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"66"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\CodeInspector\\Git\\front-end\\src\\index.js",[],[],"C:\\CodeInspector\\Git\\front-end\\src\\reportWebVitals.js",[],[],"C:\\CodeInspector\\Git\\front-end\\src\\App.js",["79"],[],"C:\\CodeInspector\\Git\\front-end\\src\\util\\useLocalStorage.js",[],[],"C:\\CodeInspector\\Git\\front-end\\src\\CodeReviewAssignmentView\\CodeReviewAssignmentView.js",["80","81","82","83","84","85","86","87"],[],"C:\\CodeInspector\\Git\\front-end\\src\\Homepage\\index.js",[],[],"C:\\CodeInspector\\Git\\front-end\\src\\PrivateRoute\\index.js",["88","89"],[],"C:\\CodeInspector\\Git\\front-end\\src\\Dashboard\\index.js",["90"],[],"C:\\CodeInspector\\Git\\front-end\\src\\AssignmentView\\index.js",["91","92","93","94","95","96"],[],"C:\\CodeInspector\\Git\\front-end\\src\\Login\\index.js",["97"],[],"C:\\CodeInspector\\Git\\front-end\\src\\CodeReviewerDashboard\\index.js",["98","99"],[],"import React, { useEffect, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport ajax from \"../Services/fetchService\";\r\nimport {  Button, Card, Col, Container, Row } from \"react-bootstrap\";\r\nimport jwt_decode from \"jwt-decode\";\r\nimport StatusBadge from \"../StatusBadge\";\r\nimport {  useUser } from \"../UserProvider\";\r\n\r\nconst CodeReviewerDashboard = () => {\r\n  const navigate = useNavigate();\r\n  const user = useUser();\r\n  const [assignments, setAssignments] = useState(null);\r\n\r\n  useEffect(()=>{\r\n    if(!user.jwt)navigate(\"/login\");\r\n  })\r\n\r\n  function editReview(assignment){\r\n    window.location.href=`/assignments/${assignment.id}`\r\n  }\r\n\r\n  function claimAssignment(assignment) {\r\n    const decodedJWT = jwt_decode(user.jwt);\r\n    const user = {\r\n      username: decodedJWT.sub,\r\n    };\r\n\r\n    assignment.codeReviewer = user;\r\n    //  todo : dont hardcode this status\r\n    assignment.status = \"In Review\";\r\n\r\n    ajax(`/api/assignments/${assignment.id}`, \"PUT\", user.jwt, assignment).then(\r\n      (updatedAssignment) => {\r\n        const assignmentsCopy = [...assignments];\r\n        const i = assignmentsCopy.findIndex((a) => a.id === assignment.id);\r\n        assignmentsCopy[i] = updatedAssignment;\r\n        setAssignments(assignmentsCopy);\r\n      }\r\n    );\r\n  }\r\n\r\n  useEffect(() => {\r\n    ajax(\"api/assignments\", \"GET\", user.jwt).then((assignmentsData) => {\r\n      setAssignments(assignmentsData);\r\n    });\r\n  }, [user.jwt]);\r\n\r\n  function createAssignment() {\r\n    ajax(\"api/assignments\", \"POST\", user.jwt).then((assignment) => {\r\n     // navigate(`/assignments/${assignment.id}`);\r\n       window.location.href = `/assignments/${assignment.id}`;\r\n    });\r\n  }\r\n  return (\r\n    <Container>\r\n      <Row>\r\n        <Col>\r\n          <div\r\n            className=\"d-flex justify-content-end\"\r\n            style={{ cursor: \"pointer\" }}\r\n            onClick={() => {\r\n              user.setJwt(null);\r\n              navigate(\"/login\");\r\n            }}\r\n          >\r\n            Logout\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <h1>Code Reviewer Dashboard</h1>\r\n        </Col>\r\n      </Row>\r\n      <div className=\"assignment-wrapper  in-review\">\r\n        <div className=\"h3 px-2 assignment-wrapper-title\">In Review</div>\r\n        {assignments &&\r\n        assignments.filter((assignment) => assignment.status === \"In Review\")\r\n          .length > 0 ? (\r\n          <div\r\n            className=\"d-grid gap-5\"\r\n            style={{ gridTemplateColumns: \"repeat(auto-fill,18rem)\" }}\r\n          >\r\n            {assignments\r\n              .filter((assignment) => assignment.status === \"In Review\" || assignment.status === \"Resubmitted\")\r\n              .map((assignment) => (\r\n                <Card\r\n                  key={assignment.id}\r\n                  style={{ width: \"18rem\", height: \"18rem\" }}\r\n                >\r\n                  <Card.Body className=\"d-flex flex-column justify-content-around\">\r\n                    <Card.Title>Assignment #{assignment.number}</Card.Title>\r\n                    <div className=\"d-flex alignitems-start\">\r\n                    <StatusBadge text={assignment.status}/>\r\n                    </div>\r\n\r\n                    <Card.Text style={{ marginTop: \"1em\" }}>\r\n                      <b>Github URL:</b> {assignment.githuburl}\r\n                      <br />\r\n                      <b>Branch:</b> {assignment.branch}\r\n                    </Card.Text>\r\n\r\n                    <Button\r\n                      variant=\"secondary\"\r\n                      onClick={() => {\r\n                        editReview(assignment);\r\n                      }}\r\n                    >\r\n                      Edit\r\n                    </Button>\r\n                  </Card.Body>\r\n                </Card>\r\n              ))}\r\n          </div>\r\n        ) : (\r\n          <div>No assignments found</div>\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"assignment-wrapper  submitted\">\r\n        <div className=\"h3 px-2 assignment-wrapper-title\">Awaiting Review</div>\r\n        {assignments &&\r\n        assignments.filter((assignment) => assignment.status === \"Submitted\" || assignment.status === \"Resubmitted\")\r\n          .length > 0 ? (\r\n          <div\r\n            className=\"d-grid gap-5\"\r\n            style={{ gridTemplateColumns: \"repeat(auto-fill,18rem)\" }}\r\n          >\r\n            {assignments\r\n              .filter((assignment) => assignment.status === \"Submitted\" || assignment.status === \"Resubmitted\")\r\n              .sort((a,b)=> {\r\n                if(a.status === \"Resubmitted\") return -1;\r\n                else return 1;\r\n              })\r\n              .map((assignment) => (\r\n                <Card\r\n                  key={assignment.id}\r\n                  style={{ width: \"18rem\", height: \"18rem\" }}\r\n                >\r\n                  <Card.Body className=\"d-flex flex-column justify-content-around\">\r\n                    <Card.Title>Assignment #{assignment.number}</Card.Title>\r\n                    <div className=\"d-flex alignitems-start\">\r\n                    <StatusBadge text={assignment.status}/>\r\n                    </div>\r\n\r\n                    <Card.Text style={{ marginTop: \"1em\" }}>\r\n                      <b>Github URL:</b> {assignment.githuburl}\r\n                      <br />\r\n                      <b>Branch:</b> {assignment.branch}\r\n                    </Card.Text>\r\n\r\n                    <Button\r\n                      variant=\"secondary\"\r\n                      onClick={() => {\r\n                        claimAssignment(assignment);\r\n                      }}\r\n                    >\r\n                      Claim\r\n                    </Button>\r\n                  </Card.Body>\r\n                </Card>\r\n              ))}\r\n          </div>\r\n        ) : (\r\n          <div>No assignments found</div>\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"assignment-wrapper  needs-update\">\r\n        <div className=\"h3 px-2 assignment-wrapper-title\">Needs Update</div>\r\n        {assignments &&\r\n        assignments.filter((assignment) => assignment.status === \"Needs Update\")\r\n          .length > 0 ? (\r\n          <div\r\n            className=\"d-grid gap-5\"\r\n            style={{ gridTemplateColumns: \"repeat(auto-fill,18rem)\" }}\r\n          >\r\n            {assignments\r\n              .filter((assignment) => assignment.status === \"Needs Update\")\r\n              .map((assignment) => (\r\n                <Card\r\n                  key={assignment.id}\r\n                  style={{ width: \"18rem\", height: \"18rem\" }}\r\n                >\r\n                  <Card.Body className=\"d-flex flex-column justify-content-around\">\r\n                    <Card.Title>Assignment #{assignment.number}</Card.Title>\r\n                    <div className=\"d-flex alignitems-start\">\r\n                    <StatusBadge text={assignment.status}/>\r\n                    </div>\r\n\r\n                    <Card.Text style={{ marginTop: \"1em\" }}>\r\n                      <b>Github URL:</b> {assignment.githuburl}\r\n                      <br />\r\n                      <b>Branch:</b> {assignment.branch}\r\n                    </Card.Text>\r\n\r\n                    <Button\r\n                      variant=\"secondary\"\r\n                      onClick={() => {\r\n                        window.location.href=`/assignments/${assignment.id}`;\r\n                      }}\r\n                    >\r\n                      View\r\n                    </Button>\r\n                  </Card.Body>\r\n                </Card>\r\n              ))}\r\n          </div>\r\n        ) : (\r\n          <div>No assignments found</div>\r\n        )}\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default CodeReviewerDashboard;\r\n",[],"C:\\CodeInspector\\Git\\front-end\\src\\Services\\fetchService.js",["100"],[],"C:\\CodeInspector\\Git\\front-end\\src\\StatusBadge\\index.js",[],[],"C:\\CodeInspector\\Git\\front-end\\src\\UserProvider\\index.js",[],[],"C:\\CodeInspector\\Git\\front-end\\src\\Comment\\index.js",["101"],[],{"ruleId":"102","severity":1,"message":"103","line":24,"column":5,"nodeType":"104","endLine":24,"endColumn":15,"suggestions":"105"},{"ruleId":"106","severity":1,"message":"107","line":6,"column":3,"nodeType":"108","messageId":"109","endLine":6,"endColumn":8},{"ruleId":"106","severity":1,"message":"110","line":8,"column":3,"nodeType":"108","messageId":"109","endLine":8,"endColumn":14},{"ruleId":"106","severity":1,"message":"111","line":11,"column":3,"nodeType":"108","messageId":"109","endLine":11,"endColumn":11},{"ruleId":"106","severity":1,"message":"112","line":12,"column":3,"nodeType":"108","messageId":"109","endLine":12,"endColumn":17},{"ruleId":"106","severity":1,"message":"113","line":28,"column":15,"nodeType":"108","messageId":"109","endLine":28,"endColumn":21},{"ruleId":"106","severity":1,"message":"114","line":29,"column":10,"nodeType":"108","messageId":"109","endLine":29,"endColumn":25},{"ruleId":"102","severity":1,"message":"115","line":62,"column":6,"nodeType":"104","endLine":62,"endColumn":18,"suggestions":"116"},{"ruleId":"102","severity":1,"message":"117","line":85,"column":6,"nodeType":"104","endLine":85,"endColumn":8,"suggestions":"118"},{"ruleId":"106","severity":1,"message":"119","line":1,"column":17,"nodeType":"108","messageId":"109","endLine":1,"endColumn":27},{"ruleId":"106","severity":1,"message":"120","line":2,"column":10,"nodeType":"108","messageId":"109","endLine":2,"endColumn":23},{"ruleId":"102","severity":1,"message":"121","line":19,"column":6,"nodeType":"104","endLine":19,"endColumn":16,"suggestions":"122"},{"ruleId":"106","severity":1,"message":"120","line":3,"column":10,"nodeType":"108","messageId":"109","endLine":3,"endColumn":23},{"ruleId":"106","severity":1,"message":"107","line":6,"column":3,"nodeType":"108","messageId":"109","endLine":6,"endColumn":8},{"ruleId":"106","severity":1,"message":"123","line":39,"column":10,"nodeType":"108","messageId":"109","endLine":39,"endColumn":28},{"ruleId":"102","severity":1,"message":"124","line":93,"column":6,"nodeType":"104","endLine":93,"endColumn":8,"suggestions":"125"},{"ruleId":"102","severity":1,"message":"115","line":129,"column":6,"nodeType":"104","endLine":129,"endColumn":18,"suggestions":"126"},{"ruleId":"102","severity":1,"message":"124","line":154,"column":6,"nodeType":"104","endLine":154,"endColumn":8,"suggestions":"127"},{"ruleId":"102","severity":1,"message":"121","line":15,"column":6,"nodeType":"104","endLine":15,"endColumn":12,"suggestions":"128"},{"ruleId":"129","severity":1,"message":"130","line":23,"column":35,"nodeType":"108","messageId":"131","endLine":23,"endColumn":39},{"ruleId":"106","severity":1,"message":"132","line":48,"column":12,"nodeType":"108","messageId":"109","endLine":48,"endColumn":28},{"ruleId":"106","severity":1,"message":"120","line":1,"column":10,"nodeType":"108","messageId":"109","endLine":1,"endColumn":23},{"ruleId":"106","severity":1,"message":"133","line":10,"column":5,"nodeType":"108","messageId":"109","endLine":10,"endColumn":16},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getRolesFromJWT'. Either include it or remove the dependency array.","ArrayExpression",["134"],"no-unused-vars","'Badge' is defined but never used.","Identifier","unusedVar","'ButtonGroup' is defined but never used.","'Dropdown' is defined but never used.","'DropdownButton' is defined but never used.","'setJwt' is assigned a value but never used.","'assignmentEnums' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'persist'. Either include it or remove the dependency array.",["135"],"React Hook useEffect has missing dependencies: 'id' and 'jwt'. Either include them or remove the dependency array.",["136"],"'useContext' is defined but never used.","'useLocalState' is defined but never used.","React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.",["137"],"'assignmentStatuses' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'assignmentId' and 'user.jwt'. Either include them or remove the dependency array.",["138"],["139"],["140"],["141"],"no-use-before-define","'user' was used before it was defined.","usedBeforeDefined","'createAssignment' is defined but never used.","'createdDate' is assigned a value but never used.",{"desc":"142","fix":"143"},{"desc":"144","fix":"145"},{"desc":"146","fix":"147"},{"desc":"148","fix":"149"},{"desc":"150","fix":"151"},{"desc":"144","fix":"152"},{"desc":"150","fix":"153"},{"desc":"154","fix":"155"},"Update the dependencies array to be: [getRolesFromJWT, user.jwt]",{"range":"156","text":"157"},"Update the dependencies array to be: [assignment, persist]",{"range":"158","text":"159"},"Update the dependencies array to be: [id, jwt]",{"range":"160","text":"161"},"Update the dependencies array to be: [navigate, user.jwt]",{"range":"162","text":"163"},"Update the dependencies array to be: [assignmentId, user.jwt]",{"range":"164","text":"165"},{"range":"166","text":"159"},{"range":"167","text":"165"},"Update the dependencies array to be: [navigate, user]",{"range":"168","text":"169"},[873,883],"[getRolesFromJWT, user.jwt]",[1645,1657],"[assignment, persist]",[2580,2582],"[id, jwt]",[635,645],"[navigate, user.jwt]",[2551,2553],"[assignmentId, user.jwt]",[3434,3446],[4412,4414],[507,513],"[navigate, user]"]